# Default values for devsudemo.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
environment: prod
#environment: prod

# This will set the replicaset count more information can be found here: https://kubernetes.io/docs/concepts/workloads/controllers/replicaset/
replicaCount: 1

# This sets the container image more information can be found here: https://kubernetes.io/docs/concepts/containers/images/
image:
  repository: silencfox/devsudemo
  # This sets the pull policy for images.
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "latest"
  # puerto donde se publica el servicio de los pods
  port: 8000

# This is for the secrets for pulling an image from a private repository more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
imagePullSecrets: []
# This is to override the chart name.
nameOverride: ""
fullnameOverride: ""

# This section builds out the service account more information can be found here: https://kubernetes.io/docs/concepts/security/service-accounts/
serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# This is for setting Kubernetes Annotations to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
podAnnotations: {}
# This is for setting Kubernetes Labels to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

secret:
  # Specifies whether a service account should be created
  username: admin
  password: admin
  database: db01


# This is for setting up a service more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/
service:
  # This sets the service type more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types
  enabled: true
  count: 3
  type: ClusterIP
  #type: LoadBalancer
  # This sets the ports more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#field-spec-ports
  port: 80


# This block is for setting up the ingress for more information can be found here: https://kubernetes.io/docs/concepts/services-networking/ingress/
ingress:
  enabled: true
  className: external-nginx
  annotations:
    cert-manager.io/cluster-issuer: staging
    nginx.ingress.kubernetes.io/rewrite-target: /
  hosts:
    host: kdvops.com
    path: /v
    pathType: ImplementationSpecific
    servicePort: 80

  #tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local
  tls:
    - hosts:
        - echo.kdvops.com
      secretName: echo-kdvops-com
### certificado letsencrypt
### server prod
#server: https://acme-v02.api.letsencrypt.org/directory
### server test
#server: https://acme-staging-v02.api.letsencrypt.org/directory


cert:
  acme:
    server: https://acme-staging-v02.api.letsencrypt.org/directory
    email: kelvin.ag89@gmail.com
resources:
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  limits:
    cpu: 100m
    memory: 128Mi
  requests:
    cpu: 100m
    memory: 128Mi

# This is to setup the liveness and readiness probes more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/
livenessProbe:
  httpGet:
    path: /api/users
    port: 8000
  initialDelaySeconds: 60 # Espera 30s antes de la primera probe
  periodSeconds: 30         # Realiza una probe cada 10s
  timeoutSeconds: 5         # Espera hasta 5s por la respuesta
  failureThreshold: 10       # Si falla 3 veces consecutivas, reinicia el container

readinessProbe:
  httpGet:
    path: /api/users
    port: 8000
  initialDelaySeconds: 60 # Espera 30s antes de la primera probe
  periodSeconds: 30         # Realiza una probe cada 10s
  timeoutSeconds: 5         # Espera hasta 5s por la respuesta
  failureThreshold: 10       # Si falla 3 veces consecutivas, reinicia el container
# This section is for setting up autoscaling more information can be found here: https://kubernetes.io/docs/concepts/workloads/autoscaling/
autoscaling:
  enabled: true
  minReplicas: 1
  maxReplicas: 2
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false
#volumes:
#  - name: volume
#    persistentVolumeClaim:
#      claimName: azure-managed-disk
# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: volume
#   mountPath: "/mnt/azure"
#   readOnly: true
nodeSelector: {}

tolerations: []

affinity: {}
